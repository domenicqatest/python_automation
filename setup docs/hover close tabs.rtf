{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 Consolas;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red245\green245\blue245;
\red50\green98\blue178;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl440\sa320\partightenfactor0

\f0\b\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Hovering\
\pard\pardeftab720\sl380\partightenfactor0

\f1\b0\fs28 \cf2 \cb4 from selenium import webdriver\
from selenium.webdriver.common.action_chains import ActionChains\
\
driver = webdriver.Chome()\
driver.get('http://example.com')\
\
element_to_hover_over = driver.find_element_by_id("id_name")\
\
hover = ActionChains(driver).move_to_element(element_to_hover_over)\
hover.perform()\
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf5 \cb1 \strokec5 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf2 \cb3 \strokec2 Working with tabs\
\pard\pardeftab720\sl360\sa320\partightenfactor0

\f2\b0\fs32 \cf2 When a new tab is opened, and you want to close the tab and resume testing in the original tab:\
\pard\pardeftab720\sl380\partightenfactor0

\f1\fs28 \cf2 \cb4 driver.find_element_by_class_name("foo").click()\
# new tabs will be the last object in the window_handles list\
driver.switch_to.window(driver.window_handles[-1])\
<do stuff>\
# close the tab\
driver.close()\
# switch to the main window\
driver.switch_to.window(driver.window_handles[0])\
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf5 \cb1 \strokec5 \
\pard\pardeftab720\sl440\sa320\partightenfactor0
\cf2 \cb3 \strokec2 Adding jQuery\
\pard\pardeftab720\sl360\sa320\partightenfactor0

\f2\b0\fs32 \cf2 Why? There's useful things you can do with jQuery such as wait for animations to complete, etc.\
\pard\pardeftab720\sl380\partightenfactor0

\f1\fs28 \cf2 \cb4 with open('/path/to/jquery.js') as jq:\
    jquery = jq.read()\
    driver.execute_script(jquery)\
}